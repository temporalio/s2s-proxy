name: Build & publish Docker image

on:
  release:
    types: [published]
  push:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      latest:
        type: boolean
        description: "Whether or not to tag latest"
        required: true
        default: false

env:
  AWS_REGION: us-west-2
  ECR_REGISTRY: 612212029444.dkr.ecr.us-west-2.amazonaws.com

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read

jobs:
  publish_to_cloud_registries:
    runs-on: ubuntu-latest

    env:
      DOCKER_TAG: ${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Generate GitHub token
        id: generate-token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: ${{ secrets.TEMPORAL_CICD_APP_ID }}
          private_key: ${{ secrets.TEMPORAL_CICD_PRIVATE_KEY }}
          permissions: >-
            {"contents": "read"}

      - name: login to cloud registries
        uses: temporalio/private-actions/docker/cloud-docker-login@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: add test prefix for non-main branches
        if: github.ref_type == 'branch' && github.ref_name != 'main'
        run: |
          echo "DOCKER_TAG=test-${DOCKER_TAG}" | tee -a "$GITHUB_ENV"

      - name: Build and push image to repositories
        uses: temporalio/private-actions/docker/build-and-push-to-registries@main
        with:
          image_name: temporal-s2s-proxy
          tag: ${{ env.DOCKER_TAG }}

      - name: Tag existing images with release tags
        uses: temporalio/private-actions/docker/retag-image@main
        if: env.RELEASE_TAG != ''
        with:
          image_name: temporal-s2s-proxy
          source_tag: ${{ env.DOCKER_TAG }}
          tag: ${{ env.RELEASE_TAG }}