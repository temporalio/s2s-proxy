name: s2s-proxy PR Pipeline

on:
  pull_request:
  merge_group:
  push:
    branches:
      - main

# this ensures that the old run is abandoned when we have a new push to the PR branch
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    name: sanity checks - pull request
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Use setup-go with a custom read-only cache of what it creates, because we only want
      # to cache builds from main to ensure we stay under the 10GB cache limit in GitHub while
      # ensuring that PRs can use the cache from main.
      #
      # See https://github.com/actions/setup-go/issues/316 for more info.
      - name: Install go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: ${{ github.ref == 'refs/heads/main' }} # only update the cache in main.

      - name: Run go build
        run: go build ./...

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1

      - name: Run go unittest
        run: make test

      - name: Install helm
        uses: azure/setup-helm@v4.3.0
        with:
          version: v3.17.3

      - name: Install helm-unittest
        run: helm plugin install https://github.com/helm-unittest/helm-unittest.git

      - name: Run helm-unittest
        working-directory: charts/s2s-proxy
        run: helm unittest .

      - name: Check Helm example.yaml is up to date
        env:
          EXAMPLE_FILE: "charts/s2s-proxy/example.yaml"
        run: |
          make helm-example
          if git diff --color --exit-code -- "$EXAMPLE_FILE"; then
            echo "Success: $EXAMPLE_FILE is up to date"
          else
            echo "ERROR: $EXAMPLE_FILE is not up to date."
            echo "Please run 'make helm-example' and commit the changes."
            exit 1
          fi
