---
# Source: s2s-proxy/templates/configmap.yaml
apiVersion: v1
data:
  config.yml: |-
    healthCheck:
      listenAddress: 0.0.0.0:8234
      protocol: http
    inbound:
      aclPolicy:
        allowedMethods:
          adminService:
          - AddOrUpdateRemoteCluster
          - RemoveRemoteCluster
          - DescribeCluster
          - DescribeMutableState
          - GetNamespaceReplicationMessages
          - GetWorkflowExecutionRawHistoryV2
          - ListClusters
          - StreamWorkflowReplicationMessages
          - ReapplyEvents
          - GetNamespace
      client:
        tcp:
          serverAddress: frontend-wumbo.temporal.svc.cluster.local:7233
          tls:
            certificatePath: test-cert
            keyPath: ""
            serverCAPath: ""
            serverName: ""
      name: inbound-server
      server:
        mux: muxed
        type: mux
    metrics:
      prometheus:
        framework: tally
        listenAddress: 0.0.0.0:8002
    mux:
    - client:
        serverAddress: 0.0.0.0:7777
        tls:
          certificatePath: abc
          keyPath: ""
          serverCAPath: ""
          serverName: ""
      mode: client
      name: muxed
    namespaceNameTranslation:
    - localName: local
      remoteName: cloud
    outbound:
      client:
        mux: muxed
        type: mux
      name: outbound-server
      server:
        tcp:
          listenAddress: 0.0.0.0:8888
          tls:
            certificatePath: ""
            clientCAPath: ""
            keyPath: ""
            requireClientAuth: false
kind: ConfigMap
metadata:
  name: example-s2s-proxy
---
# Source: s2s-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: example-s2s-proxy
  labels:
    helm.sh/chart: s2s-proxy-0.1.0
    app.kubernetes.io/name: s2s-proxy
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8888
      targetPort: 8888
      protocol: TCP
      name: rpc-egress
  selector:
    app.kubernetes.io/name: s2s-proxy
    app.kubernetes.io/instance: example
---
# Source: s2s-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-s2s-proxy
  labels:
    helm.sh/chart: s2s-proxy-0.1.0
    app.kubernetes.io/name: s2s-proxy
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: s2s-proxy
      app.kubernetes.io/instance: example
  template:
    metadata:
      labels:
        helm.sh/chart: s2s-proxy-0.1.0
        app.kubernetes.io/name: s2s-proxy
        app.kubernetes.io/instance: example
        app.kubernetes.io/version: "0.1.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: s2s-proxy
          image: "temporaliotest/s2s-proxy:v0.1.0"
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8888
            name: rpc-egress
            protocol: TCP
          - containerPort: 8234
            name: rpc-healthcheck
            protocol: TCP
          - containerPort: 8002
            name: rpc-metrics
            protocol: TCP
          env:
            - name: CONFIG_YML
              value: "/config/config.yaml"
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
